/*Задание 1
Описание задачи: Используя цикл for, выведите в консоль 11 строк, где каждая
строка содержит индекс и описание числа (0- это ноль, 1- нечетное число, 2- четное
число и т.д.).*/

// цикл for для вывода 11 строк в консоль

for (let i = 0; i <= 10; i++) {
   let description;
   if (i === 0) {
      description = "это ноль";
   } else if (i % 2 === 0) {
      description = "четное число";
   } else {
      description = "нечетное число";
   }
   console.log(`${i} - ${description}`);
}

/*Пояснение:
1. Цикл for: Начинается с i = 0 и продолжается до тех пор, пока i меньше или равно 10. На каждом шаге i увеличивается на 1.
2. Переменная description: Используется для хранения описания числа.
3. Условные операторы if...else if...else:
•  Если i равно 0, то description присваивается строка "это ноль".
•  Если i делится на 2 без остатка (четное число), то description присваивается строка "четное число".
•  В противном случае (нечетное число), description присваивается строка "нечетное число".

1.console.log: Выводит в консоль строку, содержащую индекс и описание числа.
Этот код последовательно выводит строки от 0 до 10 с соответствующими описаниями.*/


/*Задание 2
Описание задачи: Имеется массив [1, 2, 3, 4, 5, 6, 7]. Необходимо удалить
элементы 4 и 5, чтобы получить массив [1, 2, 3, 6, 7]*/

//Для удаления элементов 4 и 5 из массива [1, 2, 3, 4, 5, 6, 7] можно использовать метод splice. 

let array_1 = [1, 2, 3, 4, 5, 6, 7];
array_1.splice(3, 2);
console.log(array_1); // [1, 2, 3, 6, 7]

/*Пояснение:
1. Метод splice: Этот метод изменяет содержимое массива, удаляя существующие элементы и/или добавляя новые.
2. Параметры splice:
•  Первый параметр (3) указывает начальный индекс, с которого нужно начать удаление. В данном случае, это индекс элемента 4.
•  Второй параметр (2) указывает количество элементов, которые нужно удалить, начиная с указанного индекса. Здесь мы удаляем два элемента: 4 и 5.

1. Результат: После выполнения array.splice(3, 2), массив изменяется на [1, 2, 3, 6, 7].*/

/*Задание 3
Описание задачи:
 1. Сгенерируйте массив из 5 случайных цифр от 0 до 9.
 2. Рассчитайте сумму элементов массива.
 3. Найдите минимальное число в массиве.
 4. Определите, есть ли в массиве число 3.*/

// Для генерации массива из случайных цифр можно использовать следующий код:
 
 let array = [];
 for (let i = 0; i < 5; i++) {
   array.push(Math.floor(Math.random() * 10));
 }
 console.log(array);
 
// 2. Для расчета суммы элементов массива используем метод reduce:
 
 let sum = array.reduce((acc, num) => acc + num, 0);
 console.log(`Сумма элементов массива: ${sum}`);
 
// 3.  Для нахождения минимального числа в массиве можно использовать метод Math.min вместе с оператором распространения (...):
 
 let min = Math.min(...array);
 console.log(`Минимальное число в массиве: ${min}`);
 
// 4. Для проверки наличия числа 3 в массиве используем метод includes:
 
 let containsThree = array.includes(3);
 console.log(`Есть ли в массиве число 3: ${containsThree}`);
 
/* Пояснение:
 1. Генерация массива: Используем цикл for, чтобы заполнить массив случайными числами от 0 до 9, используя Math.random() и Math.floor().
 2. Сумма элементов: Метод reduce проходит по всем элементам массива и суммирует их.
 3. Минимальное число: Метод Math.min находит минимальное значение в массиве, используя оператор распространения для передачи элементов массива в качестве аргументов.
 4. Проверка наличия числа 3: Метод includes проверяет, содержится ли число 3 в массиве, и возвращает true или false.*/

/* Задание 4 Необязательное задание
 Описание задачи: Используя цикл for, выведите в консоль "горку" из символов x с 20
 рядами. */

// цикл for для вывода "горки" из символов x с 20 рядами:

 for (let i = 1; i <= 20; i++) {
   console.log('x'.repeat(i));
 }
 
 /*Пояснение:
 1. Цикл for: Начинается с i = 1 и продолжается до тех пор, пока i меньше или равно 20. На каждом шаге i увеличивается на 1.
 2. Метод repeat: Используется для повторения строки x i раз. Например, когда i равно 1, выводится одна x, когда i равно 2, выводится две x, и так далее.
 3. console.log: Выводит строку, содержащую i символов x, в консоль.
 
 Этот код создает "горку" из символов x, начиная с одной x в первом ряду и добавляя по одной x в каждом следующем ряду до 20-го ряда.*/

